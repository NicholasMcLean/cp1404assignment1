'''
Nicholas McLean(JC260896) - Due 11th of April, 2016

This purpose of this code is to show a list of items which are available to hire. You are able to hire out an item, return an item, add a new item.

https://github.com/NicholasMcLean/cp1404assignment1
'''
import csv

'''
define load_items function(list of items, number of items)
    open items.csv as csvfile
        for row in file
            list of items add row of data
            number of items add 1
    display number of items loaded from file
    return list o items and number of items
'''
#making a menu function so that it does not have to be typed out everytime it is needed
def menu():
    print("Menu:\n(L)ist all items\n(H)ire an item\n(R)eturn\n(A)dd new item to stock\n(Q)uit")
    return


#loading each row from the csv file and making it a tuple in a list called list_of_items
def load_items(list_of_items, number_of_items):
    with open('items.csv', newline='') as csvfile:
        file = csv.reader(csvfile)
        for row in file:
            list_of_items.append(row)
            number_of_items += 1
    print(number_of_items, "items loaded from items.csv")
    return list_of_items, number_of_items

def list_items(updated_list_of_items, updated_number_of_items):
    count_number = 0
    print("All items on file (* indicates item is currently out):")
    while updated_number_of_items > count_number:
        select_tuple = updated_list_of_items[count_number]
        name, description, cost, stock = select_tuple[0], select_tuple[1], select_tuple[2], select_tuple[3]
        if stock == "in":
            stock = "*"
        else:
            stock = ""
        count_number += 1
        print(count_number, " - ", name,"(" + description + ")", cost, stock)
    main()
'''
define hire items function(list of items, number of items
    count = 0
    instock =[]

    display items on file message
    while number of items is greater than count
        select tuple = list of items[count]
        assign variables from each element of select tuple
        if stock variable == in
            stock = "*"
            display formatted tuple
            instock.append(count)
            count + 1

        else
            count + 1

    get variable input for number to hire
    while input not in stock or is less than 0
        print error message
        get variable input for number to hire

    select tuple = list of items[choice]
    assign variables from each element of select tuple
    display name of item hired message and cost

    open csvfile
    find row(choice]
    change row[-1] == "out"
    close csv file
    call main
'''
def hire_items(updated_list_of_items, updated_number_of_items):
    count_number = 0
    instock = []

    print("All items on file (* indicates item is currently out):")
    while updated_number_of_items > count_number:
        select_tuple = updated_list_of_items[count_number]
        name, description, cost, stock = select_tuple[0], select_tuple[1], select_tuple[2], select_tuple[3]
        if stock == "in":
            stock = ""
            print(count_number, " - ", name, "(" + description + ")", cost, stock)
            instock.append(count_number)
            count_number += 1

        else:
            stock ="*"
            count_number += 1


    choice = int(input("Enter the number of an item to hire\n>>>"))
    while choice not in instock or choice < 0:
        print("The given number is not in stock - try again")
        choice = int(input("Enter the number of an item to hire\n>>>"))

    select_tuple = updated_list_of_items[choice]
    name, description, cost, stock = select_tuple[0], select_tuple[1], select_tuple[2], select_tuple[3]
    print(name, "hired for $" + cost)

'''
define return items function(list of items, number of items
    count = 0
    instock =[]

    while number of items is greater than count
        select tuple = list of items[count]
        assign variables from each element of select tuple
        if stock = out
            stock = "*"
            display formatted tuple
            instock.append(count)
            count + 1

        else
            count + 1

    get variable input for number to return
    while input not in stock or is less than 0
        print error message
        get variable input for number to hire

    select tuple = list of items[choice]
    assign variables from each element of select tuple
    display name of item hired message and cost

    open csvfile
    find row(choice]
    change row[-1] == "in"
    close csv file
    call main

define add new item function
get item name
while item name = ""
    display error message
    get item name

get item description
while item description = ""
    display error message
    get item description

get price per day as float
while price per day is less than 0
    display error message
    get price per day as float

display item availabe for hire message
save item details to new row in csv file
'''

def main():
    list_of_items = []
    number_of_items = 0
    print("Items for hire - by Nick Mclean")
    updated_list_of_items, updated_number_of_items = load_items(list_of_items, number_of_items)
    menu()
    choice = input(">>> ")
    choice = choice.upper()

    if choice == "L":
        list_items(updated_list_of_items, updated_number_of_items)
    elif choice == "H":
        hire_items(updated_list_of_items, updated_number_of_items)
    elif choice == "R":
        return
    elif choice == "A":
        return
    elif choice == "Q":
        quit
    else:
        return
main()
